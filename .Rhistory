geom_line(mapping=aes(x=ts, y=x8s), colour='purple') +
geom_hline(yintercept = 1.00002, linetype = 'dashed') +
geom_hline(yintercept = 9.51284, linetype = 'dashed') +
geom_hline(yintercept = 21.7527, linetype = 'dashed') +
xlab('Time') + ylab('X') + ggtitle('Representative trajectories for n=6')
library(ggplot2)
dX1 <- function(x) {
return(1 + 20 * x / (10 + x) - x)
}
dX2 <- function(x) {
return(1 + 20 * x^6 / (1e6 + x^6) - x)
}
step <- 0.1
x1 <- 5
x2 <- 17
x3 <- 0
x4 <- 2
x5 <- 9.6
x6 <- 9.5
x7 <- 15
x8 <- 25
x1s <- c()
x2s <- c()
x3s <- c()
x4s <- c()
x5s <- c()
x6s <- c()
x7s <- c()
x8s <- c()
ts <- seq(0, 10,by = 0.1)
for (t in ts) {
slope1 <- dX1(x1)
x1 <- step * slope1 + x1
x1s <- c(x1s, x1)
slope2 <- dX1(x2)
x2 <- step * slope2 + x2
x2s <- c(x2s, x2)
slope3 <- dX2(x3)
x3 <- step * slope3 + x3
x3s <- c(x3s, x3)
slope4 <- dX2(x4)
x4 <- step * slope4 + x4
x4s <- c(x4s, x4)
slope5 <- dX2(x5)
x5 <- step * slope5 + x5
x5s <- c(x5s, x5)
slope6 <- dX2(x6)
x6 <- step * slope6 + x6
x6s <- c(x6s, x6)
slope7 <- dX2(x7)
x7 <- step * slope7 + x7
x7s <- c(x7s, x7)
slope8 <- dX2(x8)
x8 <- step * slope8 + x8
x8s <- c(x8s, x8)
}
ggplot() + geom_line(mapping=aes(x=ts, y=x1s), colour='blue') +
geom_line(mapping=aes(x=ts, y=x2s), colour='red') +
geom_hline(yintercept = 11.84429, linetype = 'dashed') +
ylab('X') + xlab('Time') + ggtitle('Representative trajectories for n=1')
ggplot() + geom_line(mapping=aes(x=ts, y=x3s), colour='blue') +
geom_line(mapping=aes(x=ts, y=x4s), colour='red') +
geom_line(mapping=aes(x=ts, y=x5s), colour='green') +
geom_line(mapping=aes(x=ts, y=x6s), colour='yellow') +
geom_line(mapping=aes(x=ts, y=x7s), colour='orange') +
geom_line(mapping=aes(x=ts, y=x8s), colour='purple') +
geom_hline(yintercept = 1.00002, linetype = 'dashed') +
geom_hline(yintercept = 9.51284, linetype = 'dashed') +
geom_hline(yintercept = 20.7527, linetype = 'dashed') +
xlab('Time') + ylab('X') + ggtitle('Representative trajectories for n=6')
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 9.51284) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 6) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 9.1284) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else if (x > 6) {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
} else {
x4s <- c(x4s, x)
b4s <- c(b4s, b)
}
}
}
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
x4s <- c()
b4s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 9.1284) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else if (x > 6) {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
} else {
x4s <- c(x4s, x)
b4s <- c(b4s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
geom_line(mapping=aes(x=b4s, y=x4s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
x4s <- c()
b4s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 9.1284) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else if (x > 6) {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
} else if (x < 6.5) {
x4s <- c(x4s, x)
b4s <- c(b4s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
geom_line(mapping=aes(x=b4s, y=x4s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
x4s <- c()
b4s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 9.1284) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else if (x > 6) {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
} else if (x < 6.5) {
x4s <- c(x4s, x)
b4s <- c(b4s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
geom_line(mapping=aes(x=b4s, y=x4s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x3s
x4s
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
x4s <- c()
b4s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 9.1284) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else if (x > 6) {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
}
if (x < 6.5) {
x4s <- c(x4s, x)
b4s <- c(b4s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
geom_line(mapping=aes(x=b4s, y=x4s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
for (b in seq(0, 10, by=0.1)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 6) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
x3s
polyroot(c(-6e6, 1e6, 0, 0, 0, 0, -26, 1))
z <- polyroot(c(-6e6, 1e6, 0, 0, 0, 0, -26, 1))
Re(z)
Re(z)[abs(Im(z)) < 1e-12]
b3s
z <- polyroot(c(-5.15e6, 1e6, 0, 0, 0, 0, -25.15, 1))
Re(z)[abs(Im(z)) < 1e-12]
z <- polyroot(c(-5.1e6, 1e6, 0, 0, 0, 0, -25.1, 1))
Re(z)[abs(Im(z)) < 1e-12]
z <- polyroot(c(-5.11e6, 1e6, 0, 0, 0, 0, -25.11, 1))
Re(z)[abs(Im(z)) < 1e-12]
z <- polyroot(c(-5.12e6, 1e6, 0, 0, 0, 0, -25.12, 1))
Re(z)[abs(Im(z)) < 1e-12]
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
for (b in seq(0, 10, by=0.01)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 6) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
z <- polyroot(c(-5.14e6, 1e6, 0, 0, 0, 0, -25.14, 1))
Re(z)[abs(Im(z)) < 1e-12]
z <- polyroot(c(-5.13e6, 1e6, 0, 0, 0, 0, -25.13, 1))
Re(z)[abs(Im(z)) < 1e-12]
z <- polyroot(c(-5.125e6, 1e6, 0, 0, 0, 0, -25.125, 1))
Re(z)[abs(Im(z)) < 1e-12]
z <- polyroot(c(-5.122e6, 1e6, 0, 0, 0, 0, -25.122, 1))
Re(z)[abs(Im(z)) < 1e-12]
x1s <- c()
b1s <- c()
x2s <- c()
b2s <- c()
x3s <- c()
b3s <- c()
for (b in seq(0, 10, by=0.01)) {
z <- polyroot(c(-1e6*b, 1e6, 0, 0, 0, 0, -20-b, 1))
reals <- Re(z)[abs(Im(z)) < 1e-12]
bios <- reals[reals >= 0]
for (x in bios) {
if (x > 15) {
x1s <- c(x1s, x)
b1s <- c(b1s, b)
} else if (x > 6.2) {
x2s <- c(x2s, x)
b2s <- c(b2s, b)
} else {
x3s <- c(x3s, x)
b3s <- c(b3s, b)
}
}
}
ggplot() + geom_line(mapping=aes(x=b1s, y=x1s)) +
geom_line(mapping=aes(x=b2s, y=x2s), linetype='dashed') +
geom_line(mapping=aes(x=b3s, y=x3s)) +
xlab('Beta 1') + ylab('Xst') + ggtitle('Bifurcation plot for n=6')
lpog(0.25/0.1) + log(0.1/0.3) + log(2)
log(0.25/0.1) + log(0.1/0.3) + log(2)
log(0.5/0.3) + log(0.3/0.35)
for (i in 0:4) {}
for (i in 0:4) {
}
sum = 0
for (i in 0:4) {
sum = sum + choose(4,i)
}
sum
0.2^4 + 4 * 0.2^3 * 0.8
(0.75^3 * 0.25) / (4 * 0.75^3 * 0.25 + 0.75^4)
install.packages()
install.packages('NMF')
library(NMF)
install.packages('Biobase')
require(Seurat)
install.packages('Seurat')
library(NMF)
library('Biobase')
source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
install.packages('BiocManager')
BiocManager::install('Biobase')
library('Biobase')
library(NMF)
?nmfModel
nmfModels
?nmfModels
G1 = 5
G2 = 4.0188
C = 1 + 6 * (1 - G2^2 / (6.25 + G2^2))
C
(C + 4) * 56.25
0.8 * 56.25
7.5^2
30/4^2 * 4/5
(30/4)^2 * 4/5
4.019^2 / (6.25^2 + 4.019^2)
6 * (1 - 4.019^2 / (6.25^2 + 4.019^2))
G2
6 * (1 - 4.019^2 / (6.25^2 + 4.019^2)) + 1
6 * (1 - G2^2 / (6.25^2 + G2^2)) + 1
C = 6 * (1 - G2^2 / (6.25^2 + G2^2)) + 1
C
(C + 4) * 56.25
9.244905 * 56.25
test <- c(1,2,3,4)
test
install.packages('xfun')
install.packages(nnTensor)
install.packages('nnTensor')
install.packages('NMF')
library(nnTensor)
library(NMF)
test <- NMF::nmfmodel()
test <- nmfmodel()
test <- nmfModel()
is(test, 'NMF')
test2 <- NTD()
test2 <- NTD(X = matrix(c(0,1,1,0), nrow=2))
test <- new('NMF')
?setClass()
setClass('NTD', contains='NMF')
test2 <- NTD()
test2 <- new('NTD')
is(test2, 'NMF')
install.packages('scrnaseq')
BiocManager::install('scrnaseq')
BiocManager::install('scRNAseq')
library('scRNAseq')
?scRNAseq
obj = CreateSeuratObject(counts = tpm_norm)
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
ls
pwd()
get.wd()
getwd()
setwd("C:/Users/Alex/Documents/GitHub/CompGenomicsProject")
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
obj
obj@assays
obj@active.assay
obj$nCount_RNA
head(tpm_norm)
head(tpm_norm, 10)
dim(tpm_norm)
tpm_norm[1,]
length(tpm_norm[1,])
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
dim(tpm_norm)
obj@assays
SPOTlight::test_spot_fun
install.packages('SPOTlight')
devtools::install_github("https://github.com/MarcElosua/SPOTlight")
devtools::install_git("https://github.com/MarcElosua/SPOTlight")
install.packages('devtools')
devtools::install_github("https://github.com/MarcElosua/SPOTlight")
?SPOTlight::test_spot_fun()
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
devtools::install_github("https://github.com/Su-informatics-lab/DSTG")
devtools::install_git("https://github.com/Su-informatics-lab/DSTG")
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
source('../DSTG/DSTG/R_utils.R')
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
labels[,1]
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
?data.frame
?aov
labels[,2]
labels
int(labels)
as.int(labels)
as.numeric(labels)
unique(labels)
test <- as.numeric(labels, levels=unique(labels))
test
as.integer(factor(labels))
dim(labels)
source('~/GitHub/CompGenomicsProject/generate-pseudo-st.R')
